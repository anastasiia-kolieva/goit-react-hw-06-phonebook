{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/types.js","redux/actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","handelDeleteContact","createAction","actionTypes","contactFormSubmithandler","changeFilter","connect","dispatch","onSubmitData","newContact","actions","onCheckUnique","useState","name","setName","number","setNumber","handleChange","event","target","value","validateForm","alert","resetForm","className","s","form","onSubmit","preventDefault","id","shortid","generate","autoComplete","label","type","placeholder","onChange","submit_button","state","contacts","filter","filter_title","filter_input","items","normalizedFilter","toLowerCase","contact","includes","onDeleteContact","contactId","map","li","button","onClick","stylesForWrapper","width","margin","paddingTop","stylesForTitles","textAlign","color","style","isExistContact","find","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ContactsPersistConfig","key","storage","blacklist","itemsReducer","createReducer","action","payload","filterReducer","_","contactReducer","combineReducers","store","configureStore","reducer","persistReducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.71263df0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_title\":\"Filter_filter_title__LWaHF\",\"filter_input\":\"Filter_filter_input__1Huhp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__292M2\",\"button\":\"ContactList_button__1Z6W_\"};","const handelDeleteContact = 'phonebook/handelDeleteContact';\nconst contactFormSubmithandler = 'phonebook/contactFormSubmithandler';\nconst changeFilter = 'phonebook/changeFilter';\n\nexport default {\n  handelDeleteContact,\n  contactFormSubmithandler,\n  changeFilter,\n};\n","import { createAction } from '@reduxjs/toolkit';\nimport actionTypes from './types';\n\nconst handelDeleteContact = createAction(actionTypes.handelDeleteContact);\n\n// const handelDeleteContact = contactId => {\n//   return {\n//     type: actionTypes.handelDeleteContact,\n//     payload: contactId,\n//   };\n// };\n\nconst contactFormSubmithandler = createAction(\n  actionTypes.contactFormSubmithandler,\n);\n\n// const contactFormSubmithandler = newContact => {\n//   return {\n//     type: actionTypes.contactFormSubmithandler,\n//     payload: newContact,\n//   };\n// };\n\nconst changeFilter = createAction(actionTypes.changeFilter);\n\n// export const changeFilter = value => {\n//   return {\n//     type: actionTypes.changeFilter,\n//     payload: value,\n//   };\n// };\n\nexport { handelDeleteContact, contactFormSubmithandler, changeFilter };\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport s from '../ContactForm/ContactForm.module.css';\nimport shortid from 'shortid';\nimport * as actions from '../../redux/actions';\n\nfunction ContactForm({ onSubmitData, onCheckUnique }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handelSubmit = event => {\n    event.preventDefault();\n\n    const isValidateForm = validateForm();\n\n    if (!isValidateForm) {\n      return;\n    }\n\n    onSubmitData({ id: shortid.generate(), name, number });\n\n    resetForm();\n  };\n\n  const validateForm = () => {\n    if (!name || !number) {\n      alert('Some field is empty!');\n      return false;\n    }\n    return onCheckUnique(name);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handelSubmit} autoComplete=\"off\">\n      <label className={s.label}>\n        Name{' '}\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number{' '}\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.submit_button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSubmitData: newContact =>\n      dispatch(actions.contactFormSubmithandler(newContact)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport s from '../Filter/Filter.module.css';\nimport * as actions from '../../redux/actions';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <h2 className={s.filter_title}>Find contacts by name</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter contact name\"\n        className={s.filter_input}\n        value={value}\n        onChange={onChange}\n      ></input>\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    value: state.contacts.filter,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChange: event => dispatch(actions.changeFilter(event.target.value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport s from '../ContactList/ContactList.module.css';\nimport * as actions from '../../redux/actions';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id} className={s.li}>\n          {contact.name}: {contact.number}\n          <button\n            className={s.button}\n            onClick={() => onDeleteContact(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string,\n    }),\n  ),\n};\n\nconst mapStateToProps = state => {\n  const { filter, items } = state.contacts;\n  const normalizedFilter = filter.toLowerCase();\n\n  const filteredContacts = items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n\n  return {\n    contacts: filteredContacts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDeleteContact: contactId =>\n      dispatch(actions.handelDeleteContact(contactId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { connect } from 'react-redux';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nconst stylesForWrapper = {\n  width: '500px',\n  margin: '0 auto',\n  paddingTop: '30px',\n};\n\nconst stylesForTitles = {\n  textAlign: 'center',\n  color: '#6B5EAC',\n};\n\nfunction App({ contacts }) {\n  const handelCheckUniqueContact = name => {\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    isExistContact && alert('Contact is already exist!');\n    return !isExistContact;\n  };\n\n  return (\n    <div style={{ ...stylesForWrapper }}>\n      <h1 style={{ ...stylesForTitles }}>Phonebook</h1>\n\n      <ContactForm onCheckUnique={handelCheckUniqueContact} />\n\n      <h2 style={{ ...stylesForTitles }}>Contacts</h2>\n\n      <Filter />\n\n      <ContactList />\n    </div>\n  );\n}\n\n// получает всё состояние приложения, возвращает обьект, что полижим свойствами возвращаемого\n// обьекта, то и будет пропсами компонента\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts.items,\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);\n","import { combineReducers } from 'redux';\nimport {\n  configureStore,\n  createReducer,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport actionTypes from './types';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst ContactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst itemsReducer = createReducer([], {\n  // это строка потому вычисляемое свойство объекта\n  [actionTypes.handelDeleteContact]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n  [actionTypes.contactFormSubmithandler]: (state, action) => [\n    ...state,\n    action.payload,\n  ],\n});\n\nconst filterReducer = createReducer('', {\n  [actionTypes.changeFilter]: (_, action) => action.payload,\n});\n\nconst contactReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(ContactsPersistConfig, contactReducer),\n  },\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n\n// const itemsReducer = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.handelDeleteContact:\n//       // проверить contact.id !== action.payload\n//       return state.filter(contact => contact.id !== payload);\n\n//     case actionTypes.contactFormSubmithandler:\n//       return [...state, payload];\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filterReducer = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.changeFilter:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__PynTn\",\"label\":\"ContactForm_label__8kovp\",\"submit_button\":\"ContactForm_submit_button__1bBOY\"};"],"sourceRoot":""}